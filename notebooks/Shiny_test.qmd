---
title: "Shiny test"
format: 
    dashboard:
        theme: lux
jupyter: ironhack_final_env
server: shiny
---

```{python}
import pandas as pd 
from shiny import App, ui, render
import shinywidgets
import plotly.express as px

wheat_prices = pd.read_csv(r'../data/wheat_prices_FAO.csv')

wheat_prices.columns = ['Date','United States of America (Gulf), Wheat (US No. 2, Hard Red Winter)',
'Argentina, Wheat (12%, Up River)',
'Australia (Eastern States), Wheat (ASW)',
'Canada (St Lawrence), Wheat (CWRS, 13.5%)',
'European Union (France), Wheat (grade 1, Rouen)',
'United States of America (Gulf), Wheat (US No. 2, Soft Red Winter)']

long_format_wp = pd.melt(wheat_prices, id_vars=['Date'], 
                         var_name='Country_Wheat_Type', 
                         value_name='Price')

sorted_wp = long_format_wp.sort_values(by = 'Date', ascending=False).reset_index(drop=True)

sorted_wp['Date'] = (pd.to_datetime(sorted_wp['Date'])).dt.date

resorted_wp = sorted_wp.sort_values(by='Date', ascending=False).reset_index(drop=True)

```

## {.sidebar}

```{python}
from shiny.express import render, ui, input
from shinywidgets import render_plotly
ui.input_checkbox_group(  
    "checkbox_group",  
    "Index name",  
    {  
        "a": "United States of America (Gulf), Wheat (US No. 2, Hard Red Winter)",  
        "b": "Argentina, Wheat (12%, Up River)",  
        "c": "Australia (Eastern States), Wheat (ASW)",
        "d": "Canada (St Lawrence), Wheat (CWRS, 13.5%)",
        "e": "European Union (France), Wheat (grade 1, Rouen)",
        "f": "United States of America (Gulf), Wheat (US No. 2, Soft Red Winter"
    },  
)  

@render.text
def value():
    return ", ".join(input.checkbox_group())


```

## Column

```{python}

@render_plotly
def lineplot():
    fig = px.line(resorted_wp, x = 'Date', y = 'Price', color = 'Country_Wheat_Type', title = 'Historic wheat prices')
    fig.update_layout(legend=dict(
        orientation="v",
        yanchor="bottom",
        y=0.5,
        xanchor="right",
        x=10,
        title_font_family="Courier",
            font=dict(
                family="Courier",
                size=14,
                color="black"
            ),
    ))
    return fig.show(renderer = "notebook")
```